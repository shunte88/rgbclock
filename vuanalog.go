package main

import (
	"bytes"
	"fmt"
	"image"
	"image/draw"
	"image/png"
	"math"
	"os"

	"github.com/disintegration/imaging"

	svg "github.com/ajstarks/svgo"
	"github.com/fogleman/gg"
	"github.com/srwiley/oksvg"
	"github.com/srwiley/rasterx"
)

func (ls *LMSServer) initVUBase() {

	vuf, err := os.Open(ls.vulayout.base)
	if err != nil {
		fmt.Println(`Open exception`, ls.vulayout.base, `:`, err)
		panic(err)
	}
	defer vuf.Close()

	vu, err := png.Decode(vuf)
	if err != nil {
		fmt.Println(`Decode PNG exception`, ls.vulayout.base, `:`, err)
		panic(err)
	}

	z := vu.Bounds().Max.X
	// horizontal/vertical layout
	if `horizontal` == ls.vulayout.layout {
		vu = imaging.Resize(vu, int(122/2), 40, imaging.Lanczos)
		b := vu.Bounds()
		ls.vulayout.w = b.Max.X
		ls.vulayout.h = b.Max.Y
		ls.vulayout.w2m = 2*(ls.vulayout.w) + 4
		ls.vulayout.h2m = ls.vulayout.h + 2
		ls.vulayout.wMeter = float64(ls.vulayout.h) + (float64(b.Max.X) * (41.00 / float64(z)))
		ls.vulayout.rMeter = float64(b.Max.X) * (235.00 / float64(z))
		ls.vulayout.rWell = float64(ls.vulayout.h) / 5.5
	}
	// create new image an place the meters
	ls.vulayout.baseImage = image.NewRGBA(image.Rect(0, 0, ls.vulayout.w2m, ls.vulayout.h2m))
	for i := 0; i < 2; i++ {
		pt := image.Point{1 + i + (i * (ls.vulayout.w + 1)), 1}
		ls.vulayout.xpos[i] = float64(pt.X) + (float64(ls.vulayout.w) / 2.00)
		r := image.Rectangle{pt, pt.Add(image.Point{ls.vulayout.w, ls.vulayout.h})}
		draw.Draw(ls.vulayout.baseImage, r, vu, image.ZP, draw.Src)
	}
	ls.vu = image.NewRGBA(image.Rect(0, 0, ls.vulayout.baseImage.Bounds().Max.X, ls.vulayout.baseImage.Bounds().Max.Y))

}

func (ls *LMSServer) vuAnalog(accum [2]int32, scaled [2]int32, dB [2]int32, dBfs [2]int32, linear [2]int32) {

	ls.mux.Lock()
	defer ls.mux.Unlock()

	dc := gg.NewContext(ls.vulayout.w2m, ls.vulayout.h2m)
	dc.DrawImageAnchored(ls.vulayout.baseImage, 0, 0, 0, 0)
	rad := (180.00 / math.Pi)

	for channel := 0; channel < 2; channel++ {

		mv := 0.00
		// depending on the mode - calculate value

		// simple pre-scaled
		mv = float64(scaled[channel]) * (2 * 36.00) / 48.00
		mv -= 36.000 // zero adjust

		fmt.Printf("mv %f, scaled %.2d, dB %.3d, dBfs %.3d, Lin %.3d\n",
			mv, scaled[channel], dB[channel], dBfs[channel], linear[channel])

		ax := (ls.vulayout.xpos[channel] + (math.Sin(mv/rad) * ls.vulayout.rMeter))
		ay := (ls.vulayout.wMeter - (math.Cos(mv/rad) * ls.vulayout.rMeter))

		// draw the needle
		dc.SetLineWidth(0.8)
		dc.SetHexColor("#FF4500")
		dc.DrawLine(ls.vulayout.xpos[channel], ls.vulayout.wMeter, ax, ay)
		dc.Stroke()

		// draw the well
		dc.SetLineWidth(1)
		dc.SetHexColor("#00ff00")
		dc.StrokePreserve()
		dc.SetHexColor("#000000")

		dc.DrawEllipse(ls.vulayout.xpos[channel],
			ls.vulayout.wMeter, ls.vulayout.rWell*1.2, ls.vulayout.rWell)
		dc.Fill()
		dc.Stroke()

	}

	draw.Draw(ls.vu, ls.vu.Bounds(), dc.Image(), image.ZP, draw.Src)

}

func (ls *LMSServer) vuAnalogNotUsed(channel string, swing, sw, sh int) (img draw.Image, err error) {

	img = image.NewRGBA(image.Rect(0, 0, sw, sh))

	var iconMem = new(bytes.Buffer)
	var canvas = svg.New(iconMem)

	w, h := 449, 264
	canvas.Start(w, h)

	iconMem.WriteString(`<defs>
	<filter id="blur" filterUnits="objectBoundingBox" x="-50%" y="-50%" width="200%" height="200%">
	<feGaussianBlur in="SourceGraphic" stdDeviation="8"/></filter>
	</defs>
	`)

	canvas.Rect(1, 1, w-2, 263, `style="fill:#ffeea9;stroke-width:4;filter:url(#blur);stroke:red;"`)

	canvas.Group(`style="fill:blue;stroke:black;stroke-width;1px;"`)
	if `R` == channel {
		canvas.Path(`m174.77143,50.000004l0,-0.552c-0.84,-0.576 -1.032,-1.2 -1.056,-3.528c-0.048,-2.88 -0.48,-3.744 -2.376,-4.56c1.968,-0.96 2.76,-2.184 2.76,-4.175997c0,-3.024 -1.896,-4.68 -5.328,-4.68l-8.064,0l0,17.495997l2.232,0l0,-7.536l5.76,0c1.968,0 2.904,0.96 2.88,3.12l-0.024,1.56c-0.024,1.08 0.192,2.136 0.504,2.856l2.712,0zm-3,-12.503997c0,2.063997 -1.056,2.999997 -3.432,2.999997l-5.4,0l0,-6.023997l5.4,0c2.496,0 3.432,1.056 3.432,3.024z`)
	} else {
		canvas.Path(`m173.25964,50.000004l0,-1.968l-8.64,0l0,-15.528l-2.232,0l0,17.496l10.872,0z`)
	}
	canvas.Path(`m187.29926,49.999999l0,-1.728l-5.712,0l0,1.728l5.712,0z`)
	canvas.Path(`m207.94714,50.000004l0,-1.968l-8.64,0l0,-15.528l-2.232,0l0,17.496l10.872,0z`)
	canvas.Path(`m220.82651,43.928004c0,-1.824 -0.144,-2.976 -0.504,-3.912c-0.816,-2.064 -2.736,-3.312 -5.088,-3.312c-3.504,0 -5.76,2.592 -5.76,6.72c0,4.128 2.184,6.576 5.712,6.576c2.88,0 4.872,-1.632 5.376,-4.176l-2.016,0c-0.552,1.656 -1.68,2.328 -3.288,2.328c-2.088,0 -3.648,-1.344 -3.696,-4.224l9.264,0zm-2.136,-1.776c0,0 0,0.096 -0.024,0.144l-7.056,0c0.168,-2.232 1.584,-3.744 3.6,-3.744c1.968,0 3.48,1.632 3.48,3.6z`)
	canvas.Path(`m233.16289,37.424004l-2.256,0l-3.552,10.2l-3.36,-10.2l-2.256,0l4.416,12.576l2.184,0l4.824,-12.576z`)
	canvas.Path(`m245.34214,43.928004c0,-1.824 -0.144,-2.976 -0.504,-3.912c-0.816,-2.064 -2.736,-3.312 -5.088,-3.312c-3.504,0 -5.76,2.592 -5.76,6.72c0,4.128 2.184,6.576 5.712,6.576c2.88,0 4.872,-1.632 5.376,-4.176l-2.016,0c-0.552,1.656 -1.68,2.328 -3.288,2.328c-2.088,0 -3.648,-1.344 -3.696,-4.224l9.264,0zm-2.136,-1.776c0,0 0,0.096 -0.024,0.144l-7.056,0c0.168,-2.232 1.584,-3.744 3.6,-3.744c1.968,0 3.48,1.632 3.48,3.6z`)
	canvas.Path(`m250.01351,50.000004l0,-17.496l-1.992,0l0,17.496l1.992,0z`)
	canvas.Path(`m270.26951,49.640004l0,-17.496l-1.992,0l0,6.504c-0.84,-1.272 -2.184,-1.944 -3.864,-1.944c-3.264,0 -5.4,2.52 -5.4,6.528c0,4.248 2.088,6.768 5.472,6.768c1.728,0 2.928,-0.648 4.008,-2.208l0,1.848l1.776,0zm-1.992,-6.24c0,2.904 -1.392,4.728 -3.504,4.728c-2.208,0 -3.672,-1.848 -3.672,-4.776c0,-2.928 1.464,-4.776 3.648,-4.776c2.16,0 3.528,1.92 3.528,4.824z`)
	canvas.Path(`m286.70089,45.008004c0,-2.112 -0.96,-3.384 -3.192,-4.248c1.584,-0.744 2.424,-2.04 2.424,-3.816c0,-2.544 -1.872,-4.44 -5.184,-4.44l-7.104,0l0,17.496l7.896,0c3.144,0 5.16,-2.112 5.16,-4.992zm-3,-7.752c0,1.776 -1.032,2.784 -3.504,2.784l-4.32,0l0,-5.568l4.32,0c2.472,0 3.504,1.008 3.504,2.784zm0.768,7.776c0,1.68 -1.032,3 -3.144,3l-5.448,0l0,-6.024l5.448,0c2.112,0 3.144,1.32 3.144,3.024z`)
	canvas.Gend()

	styleGauge := `style="fill:none;stroke-width:%d;stroke:%s"`
	canvas.Group()
	canvas.Path(`m34.683176,122.225456l18.886663,0z`, `style="fill:none;fill-rule:evenodd;stroke-width:3;stroke-miterlimit:4;stroke:black"`)
	canvas.Path(`m395.819023,119.65l18.886663,0z`, `style="fill:none;fill-rule:evenodd;stroke-width:3;stroke-miterlimit:4;stroke:red"`)
	canvas.Path(`m405.262355,110.206668l0,18.886663z`, `style="fill:none;fill-rule:evenodd;stroke-width:3;stroke-miterlimit:4;stroke:red"`)
	canvas.Path(`m274.382277,116.074644c35.687565,3.698986 72.207712,10.544722 123.384266,31.669129`, fmt.Sprintf(styleGauge, 6, `red`))
	canvas.Path(`m53.032146,149.644157c67.321881,-25.071967 131.318469,-40.893083 221.45554,-33.95048`, fmt.Sprintf(styleGauge, 6, `black`))
	canvas.Path(`m88.34358,113.596814l14.327995,19.915915z`, fmt.Sprintf(styleGauge, 3, `black`))
	canvas.Path(`m119.578611,104.570179l11.462394,21.778552z`, fmt.Sprintf(styleGauge, 3, `black`))
	canvas.Path(`m152.962839,97.836023l7.737116,22.065111z`, fmt.Sprintf(styleGauge, 3, `black`))
	canvas.Path(`m188.782827,92.677944l3.725278,22.494952z`, fmt.Sprintf(styleGauge, 3, `black`))
	canvas.Path(`m227.325133,91.101862l-0.286559,22.494952z`, fmt.Sprintf(styleGauge, 3, `black`))
	canvas.Path(`m259.27656,92.248103l-3.581997,22.208393z`, fmt.Sprintf(styleGauge, 3, `black`))
	canvas.Path(`m279.479034,95.113704l-6.017761,23.497911z`, fmt.Sprintf(styleGauge, 3, `red`))
	canvas.Path(`m324.755497,102.13442l-10.172876,20.345751z`, fmt.Sprintf(styleGauge, 3, `red`))
	canvas.Path(`m360.862044,133.369447l14.327995,-18.196551z`, fmt.Sprintf(styleGauge, 3, `red`))
	canvas.Gend()

	canvas.Group(`style="stroke-width:1px;fill:red;"`)
	canvas.Path(`m379.007808,91.810767l8.070565,0l0,1.730169l-6.187989,0l0,3.724966q0.4478,-0.152661 0.895599,-0.223904q0.4478,-0.081423 0.895599,-0.081423q2.544354,0 4.03028,1.394298t1.485884,3.775824q0,2.452768 -1.526612,3.816552q-1.526612,1.353612 -4.304996,1.353612q-0.95667,0 -1.954069,-0.162837q-0.987227,-0.162841 -2.045655,-0.488528l0,-2.065998q0.915984,0.498699 1.892998,0.742942q0.977055,0.24426 2.06604,0.24426q1.760684,0 2.788597,-0.926156t1.027913,-2.513839q0,-1.587683 -1.027913,-2.513839q-1.027913,-0.926156 -2.788597,-0.926156q-0.824356,0 -1.648755,0.183193q-0.814185,0.183193 -1.669098,0.569942l0.000208,-7.633078l0.000001,0z`)
	canvas.Path(`m332.256061,83.585961q1.475713,0.315502 2.300111,1.312884q0.83457,0.997398 0.83457,2.46294q0,2.249211 -1.546955,3.480681q-1.546955,1.23147 -4.396707,1.23147q-0.95667,0 -1.974412,-0.193373q-1.00757,-0.183193 -2.086383,-0.55977l0,-1.984583q0.854913,0.498699 1.872654,0.753114q1.017742,0.254435 2.127069,0.254435q1.933726,0 2.941296,-0.763327q1.017742,-0.763285 1.017742,-2.218697q0,-1.343441 -0.946499,-2.096554q-0.936327,-0.763285 -2.615597,-0.763285l-1.770855,0l0,-1.689441l1.852311,0q1.516441,0 2.320454,-0.600457q0.804013,-0.610628 0.804013,-1.750512q0,-1.170399 -0.83457,-1.79124q-0.824356,-0.631013 -2.371354,-0.631013q-0.844741,0 -1.811583,0.183193t-2.127069,0.569942l0,-1.831926q1.170399,-0.325678 2.18814,-0.488528q1.027913,-0.162837 1.933726,-0.162837q2.340797,0 3.704581,1.068641q1.363784,1.05847 1.363784,2.870053q0,1.261985 -0.722599,2.137282q-0.722599,0.865084 -2.055826,1.200955l-0.000042,-0.000046l0,-0.000001z`)
	canvas.Path(`m283.565879,71.267512q-1.587683,0 -2.391697,1.56734q-0.793842,1.557169 -0.793842,4.691849q0,3.124467 0.793842,4.691849q0.804013,1.557169 2.391697,1.557169q1.597855,0 2.391697,-1.557169q0.804013,-1.56734 0.804013,-4.691849q0,-3.134639 -0.804013,-4.691849q-0.793842,-1.56734 -2.391697,-1.56734zm0,-1.62837q2.554525,0 3.897966,2.025311q1.353612,2.01514 1.353612,5.861998q0,3.836895 -1.353612,5.861998q-1.343441,2.01514 -3.897966,2.01514t-3.908138,-2.01514q-1.343399,-2.025311 -1.343399,-5.861998q0,-3.847066 1.343399,-5.861998q1.353612,-2.025311 3.908138,-2.025311z`)
	canvas.Gend()

	canvas.Group(`style="stroke-width:1px;fill:black;"`)
	canvas.Path(`m194.738936,140.375889l7.78328,0l7.964517,23.076028l7.944437,-23.076028l7.78328,0l-11.122209,31.263362l-9.231609,0l-11.121696,-31.263362z`)
	canvas.Path(`m230.177398,140.375889l7.743123,0l0,18.741397q0,3.873933 1.206749,5.549355q1.22683,1.654245 3.982207,1.654245q2.775457,0 3.982207,-1.654245q1.22683,-1.675205 1.22683,-5.549355l0,-18.741397l7.743123,0l0,18.741397q0,6.638102 -3.197803,9.883982q-3.197803,3.245718 -9.754203,3.245718q-6.536269,0 -9.734122,-3.245718q-3.197803,-3.245718 -3.197803,-9.883982l-0.000308,-18.741397z`)
	canvas.Path(`m258.58298,80.680391l3.358539,0l0,-11.592265l-3.653681,0.732771l0,-1.872654l3.633338,-0.732771l2.055826,0l0,13.464836l3.358539,0l0,1.730169l-8.752561,0l0,-1.730086z`)
	canvas.Path(`m230.123401,73.581129q1.475713,0.315502 2.300111,1.312884q0.83457,0.997398 0.83457,2.46294q0,2.249211 -1.546955,3.480681q-1.546955,1.23147 -4.396707,1.23147q-0.95667,0 -1.974412,-0.193373q-1.00757,-0.183193 -2.086383,-0.55977l0,-1.984583q0.854913,0.498699 1.872654,0.753114q1.017742,0.254435 2.127069,0.254435q1.933726,0 2.941296,-0.763327q1.017742,-0.763285 1.017742,-2.218697q0,-1.343441 -0.946499,-2.096554q-0.936327,-0.763285 -2.615597,-0.763285l-1.770855,0l0,-1.689441l1.852311,0q1.516441,0 2.320454,-0.600457q0.804013,-0.610628 0.804013,-1.750512q0,-1.170399 -0.83457,-1.79124q-0.824356,-0.631013 -2.371354,-0.631013q-0.844741,0 -1.811583,0.183193t-2.127069,0.569942l0,-1.831926q1.170399,-0.325678 2.18814,-0.488528q1.027913,-0.162837 1.933726,-0.162837q2.340797,0 3.704581,1.068641q1.363784,1.05847 1.363784,2.870053q0,1.261985 -0.722599,2.137282q-0.722599,0.865084 -2.055826,1.200955l-0.000042,-0.000046l0,-0.000001z`)
	canvas.Path(`m185.997923,69.716763l8.070565,0l0,1.730169l-6.187989,0l0,3.724966q0.4478,-0.152661 0.895599,-0.223904q0.4478,-0.081423 0.895599,-0.081423q2.544354,0 4.03028,1.394298t1.485884,3.775824q0,2.452768 -1.526612,3.816552q-1.526612,1.353612 -4.304996,1.353612q-0.95667,0 -1.954069,-0.162837q-0.987227,-0.162841 -2.045655,-0.488528l0,-2.065998q0.915984,0.498699 1.892998,0.742942q0.977055,0.24426 2.06604,0.24426q1.760684,0 2.788597,-0.926156t1.027913,-2.513839q0,-1.587683 -1.027913,-2.513839q-1.027913,-0.926156 -2.788597,-0.926156q-0.824356,0 -1.648755,0.183193q-0.814185,0.183193 -1.669098,0.569942l0.000208,-7.633078l0.000001,0z`)
	canvas.Path(`m147.60438,73.051707l9.770552,0l0,0.875256l-5.515997,14.319833l-2.147454,0l5.190423,-13.464836l-7.297274,0l-0.00025,-1.730252l0,-0.000001z`)
	canvas.Path(`m108.093631,91.302188l3.358539,0l0,-11.592265l-3.653681,0.732771l0,-1.872654l3.633338,-0.732771l2.055826,0l0,13.464836l3.358539,0l0,1.730169l-8.752561,0l0,-1.730086z`)
	canvas.Path(`m125.401991,79.188004q-1.587683,0 -2.391697,1.56734q-0.793842,1.557169 -0.793842,4.691849q0,3.124467 0.793842,4.691849q0.804013,1.557169 2.391697,1.557169q1.597855,0 2.391697,-1.557169q0.804013,-1.56734 0.804013,-4.691849q0,-3.134639 -0.804013,-4.691849q-0.793842,-1.56734 -2.391697,-1.56734zm0,-1.62837q2.554525,0 3.897966,2.025311q1.353612,2.01514 1.353612,5.861998q0,3.836895 -1.353612,5.861998q-1.343441,2.01514 -3.897966,2.01514t-3.908138,-2.01514q-1.343399,-2.025311 -1.343399,-5.861998q0,-3.847066 1.343399,-5.861998q1.353612,-2.025311 3.908138,-2.025311z`)
	canvas.Path(`m71.375898,100.473284l7.175132,0l0,1.730169l-9.64841,0l0,-1.730169q1.170399,-1.211127 3.185539,-3.24661q2.025311,-2.045655 2.544354,-2.63594q0.987227,-1.109327 1.373955,-1.872654q0.396921,-0.773499 0.396921,-1.516441q0,-1.211127 -0.854913,-1.974412q-0.844741,-0.763285 -2.208483,-0.763285q-0.966842,0 -2.045655,0.335854q-1.068641,0.335854 -2.289939,1.017742l0,-2.076211q1.241641,-0.498699 2.320454,-0.753114t1.974412,-0.254435q2.361182,0 3.765652,1.18057q1.404512,1.18057 1.404512,3.155024q0,0.936327 -0.356214,1.781069q-0.34603,0.83457 -1.272198,1.974412q-0.25444,0.295143 -1.618198,1.709826q-1.363784,1.40447 -3.847066,3.938652l0.000146,-0.000046l-0.000001,-0.000001z`)
	canvas.Path(`m87.275243,88.3591q-1.587683,0 -2.391697,1.56734q-0.793842,1.557169 -0.793842,4.691849q0,3.124467 0.793842,4.691849q0.804013,1.557169 2.391697,1.557169q1.597855,0 2.391697,-1.557169q0.804013,-1.56734 0.804013,-4.691849q0,-3.134639 -0.804013,-4.691849q-0.793842,-1.56734 -2.391697,-1.56734zm0,-1.62837q2.554525,0 3.897966,2.025311q1.353612,2.01514 1.353612,5.861998q0,3.836895 -1.353612,5.861998q-1.343441,2.01514 -3.897966,2.01514t-3.908138,-2.01514q-1.343441,-2.025311 -1.343441,-5.861998q0,-3.847066 1.343441,-5.861998q1.353612,-2.025311 3.908138,-2.025311z`)
	canvas.Gend()

	transform := ``
	if swing > 0 {
		transform = fmt.Sprintf("transform=\"rotate(%f 224.63693237304682,305.0175170898438)\"", float64(swing)*80.00/48.00)
	}
	iconMem.WriteString(`<line id="needle" style="fill-rule:evenodd;stroke-width:4;stroke-miterlimit:4;stroke:darkslategrey;" ` +
		transform + ` y2="122.104244" x2="77.22333" y1="305.017519" x1="224.636926"/>
		`)
	canvas.Path(`m224.433461,246.549826a62.849338,62.849338 0 0 0 -44.733522,18.780229l89.517522,0a62.849338,62.849338 0 0 0 -44.784,-18.780229z`, `style="fill:black;stroke-width:1.5;stroke-miterlimit:4;stroke-dashoffset:0;stroke:gray;"`)
	iconMem.WriteString(`<ellipse ry="1.476388" rx="1.578204" cy="305.017519" cx="224.636926" style="fill:black;stroke-width:0.61062;stroke-miterlimit:4;stroke-dashoffset:0;stroke:blue;"/>`)

	canvas.End()

	fmt.Println(iconMem.String())
	iconI, err := oksvg.ReadIconStream(iconMem)
	if err != nil {
		return img, err
	}

	gv := rasterx.NewScannerGV(w, h, img, img.Bounds())
	r := rasterx.NewDasher(w, h, gv)
	iconI.SetTarget(0, 0, float64(sw), float64(sh))
	iconI.Draw(r, 1.0)

	return img, nil

}
